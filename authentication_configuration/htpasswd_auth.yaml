apiVersion: console.openshift.io/v1
kind: ConsoleQuickStart
metadata:
  name: htpasswd-auth
spec:
  conclusion: You can now login with the users you created instead of kubeadmin. Make sure to assign appropriate access to the different users.
  description: Do you need to create local users to your cluster? Please follow this quick guide.
  displayName: Local authentication configuration with HTPasswd
  durationMinutes: 10
  title: Create cluster users with HTPasswd
  introduction: "By default, only a kubeadmin user exists on your cluster. To specify an identity provider, you must create a Custom Resource (CR) that describes that identity provider and add it to the cluster."
  tasks:
    - description:
        "To use the HTPasswd identity provider, you must generate a flat file that contains the user names and passwords for your cluster by using htpasswd.
        # Prerequisites
        Have access to the htpasswd utility. On Red Hat Enterprise Linux this is available by installing the httpd-tools package. On Windows Have access to htpasswd.exe. This file is included in the \bin directory of many Apache httpd distributions.

        1. Create the htpasswd file on the command line \n\n ```\n htpasswd -c -B -b </path/to/users.htpasswd> <user_name> <password>\n ``` \n\n
        Example: \n\n ```\n htpasswd -c -B -b users.htpasswd user1 MyPassword! \n``` \n\n
        Example output: \n\n ```\n Adding password for user user1 \n``` \n\n
        2. Continue to add or update credentials to the file:
        \n\n ```\n htpasswd -c -B -b </path/to/users.htpasswd> <user_name> <password>\n ``` \n\n
        "
      review:
        failedTaskHelp: This task isn’t verified yet. Try the task again.
        instructions: |-
          #### To verify the application was successfully created:
          1. Do you see users in the file you created?
          2. Are there hashes with the users?
      summary:
        failed: Try the steps again.
        success: You have created a htpasswd file!
      title: Create an htpasswd file
    - description:
        "To use the HTPasswd identity provider, you must define a secret that contains the HTPasswd user file.\n
        1. Create an OpenShift Container Platform Secret object that contains the HTPasswd users file. \n\n ```\n oc create secret generic htpass-secret --from-file=htpasswd=</path/to/users.htpasswd> -n openshift-config\n ``` \n\n"
      review:
        failedTaskHelp: This task isn’t verified yet. Try the task again.
        instructions: "Do you see the secret when you run ```oc get secrets -n openshift-config```?"
      summary:
        failed: Try the steps again.
        success: Your sample app is now built!
      title: Create a secret to represent the htpasswd file
    - description: "1. Import the htpasswd_crd.yaml.yaml: \n\n ```\n oc apply -f https://github.com/redhat-adsa/OpenShift-Quickstarts/blob/main/authentication_configuration/htpasswd_crd.yaml\n ``` \n\n"
      review:
        failedTaskHelp: This task isn’t verified yet. Try the task again.
        instructions: |-
          #### Verify you can login to openshift with one of the users in the HTPasswd file
          can you login with oc login -u <username>?
      summary:
        failed: Try the steps again.
        success: You can now log in with the users in your HTPasswd file.
      title: Import custom resource definition and test login.
